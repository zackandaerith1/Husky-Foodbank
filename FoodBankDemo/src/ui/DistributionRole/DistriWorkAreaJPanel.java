/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.DistributionRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.FoodBankEnterprise;
import Business.Organization.Foodbank.DistributionOrganization;
import Business.Profile.Volunteer;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FoodBankToVolunteerWorkRequest;
import Business.WorkQueue.ShelterToFoodbankWorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author zhengfang
 */
public class DistriWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private DistributionOrganization organization;
    private FoodBankEnterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem business;

    /**
     * Creates new form DistriWorkAreaJPanel
     */
    public DistriWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, DistributionOrganization organization, FoodBankEnterprise enterprise, EcoSystem business) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.business = business;
        valueLabel.setText(enterprise.getName());
        populateRequestTable();
        populatevoluntertable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        requestTestJButton = new javax.swing.JButton();
        viewdetailJButton = new javax.swing.JButton();
        refreshTestJButton = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        btnApplyVolunteer = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtHeadcount = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProfile = new javax.swing.JTable();
        refreshTestJButton1 = new javax.swing.JButton();
        btnTaskcompleted = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtmessage = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(233, 230, 225));

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "", "Receiver", "Status", "Result", "Message"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);
        if (workRequestJTable.getColumnModel().getColumnCount() > 0) {
            workRequestJTable.getColumnModel().getColumn(0).setMinWidth(0);
            workRequestJTable.getColumnModel().getColumn(0).setPreferredWidth(0);
            workRequestJTable.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        requestTestJButton.setBackground(new java.awt.Color(94, 138, 117));
        requestTestJButton.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        requestTestJButton.setForeground(new java.awt.Color(43, 71, 92));
        requestTestJButton.setText("Process the request");
        requestTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButtonActionPerformed(evt);
            }
        });

        viewdetailJButton.setBackground(new java.awt.Color(94, 138, 117));
        viewdetailJButton.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        viewdetailJButton.setForeground(new java.awt.Color(43, 71, 92));
        viewdetailJButton.setText("View");
        viewdetailJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewdetailJButtonActionPerformed(evt);
            }
        });

        refreshTestJButton.setBackground(new java.awt.Color(94, 138, 117));
        refreshTestJButton.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        refreshTestJButton.setForeground(new java.awt.Color(43, 71, 92));
        refreshTestJButton.setText("Refresh");
        refreshTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButtonActionPerformed(evt);
            }
        });

        enterpriseLabel.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        enterpriseLabel.setForeground(new java.awt.Color(43, 71, 92));
        enterpriseLabel.setText("EnterPrise :");

        valueLabel.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        valueLabel.setForeground(new java.awt.Color(43, 71, 92));
        valueLabel.setText("<value>");

        btnApplyVolunteer.setBackground(new java.awt.Color(94, 138, 117));
        btnApplyVolunteer.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        btnApplyVolunteer.setForeground(new java.awt.Color(43, 71, 92));
        btnApplyVolunteer.setText("Request Volunteers");
        btnApplyVolunteer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApplyVolunteerActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(43, 71, 92));
        jLabel7.setText("Number of Volunteers:");

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(43, 71, 92));
        jLabel2.setText("Volunteer List");

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setAutoscrolls(true);

        tblProfile.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        tblProfile.setForeground(new java.awt.Color(43, 71, 92));
        tblProfile.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "", "ID", "First Name", "Last Name", "Gender", "Age", "Birth Day", "Phone Number", "Home Address", "Email Address", "Comment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblProfile);
        if (tblProfile.getColumnModel().getColumnCount() > 0) {
            tblProfile.getColumnModel().getColumn(0).setMinWidth(0);
            tblProfile.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblProfile.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        refreshTestJButton1.setBackground(new java.awt.Color(94, 138, 117));
        refreshTestJButton1.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        refreshTestJButton1.setForeground(new java.awt.Color(43, 71, 92));
        refreshTestJButton1.setText("Refresh");
        refreshTestJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButton1ActionPerformed(evt);
            }
        });

        btnTaskcompleted.setBackground(new java.awt.Color(94, 138, 117));
        btnTaskcompleted.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        btnTaskcompleted.setForeground(new java.awt.Color(43, 71, 92));
        btnTaskcompleted.setText("Completed");
        btnTaskcompleted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaskcompletedActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(43, 71, 92));
        jLabel8.setText("Message:");

        txtmessage.setColumns(20);
        txtmessage.setRows(5);
        jScrollPane3.setViewportView(txtmessage);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(valueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(requestTestJButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(viewdetailJButton))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(refreshTestJButton)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(234, 234, 234)
                            .addComponent(refreshTestJButton1))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 808, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnTaskcompleted)
                        .addGap(361, 361, 361))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(btnApplyVolunteer)
                            .addGap(330, 330, 330))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addGap(18, 18, 18)
                            .addComponent(txtHeadcount, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(345, 345, 345)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(valueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addComponent(refreshTestJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(refreshTestJButton1))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(requestTestJButton)
                    .addComponent(viewdetailJButton)
                    .addComponent(btnTaskcompleted))
                .addGap(166, 166, 166)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtHeadcount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(btnApplyVolunteer)
                .addGap(99, 99, 99))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void requestTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButtonActionPerformed

        try {
            int selectedRow = workRequestJTable.getSelectedRow();
            if (selectedRow < 0) {
                JOptionPane.showMessageDialog(null, "Please Select a row from table first", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
//impletement method

            ShelterToFoodbankWorkRequest d = (ShelterToFoodbankWorkRequest) workRequestJTable.getValueAt(selectedRow, 0);

            d.setStatus("Completed");
            populateRequestTable();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Please Select a row from table first", "Warning", JOptionPane.WARNING_MESSAGE);
        }
//
//        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        userProcessContainer.add("RequestLabTestJPanel", new RequestLabTestJPanel(userProcessContainer, userAccount, enterprise));
//        layout.next(userProcessContainer);
    }//GEN-LAST:event_requestTestJButtonActionPerformed

    private void refreshTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButtonActionPerformed
        try {
            populateRequestTable();
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "There Is No Record Yet!");
            return;
        }

    }//GEN-LAST:event_refreshTestJButtonActionPerformed

    private void viewdetailJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewdetailJButtonActionPerformed
        // TODO add your handling code here:
        try {
            int selectedRow = workRequestJTable.getSelectedRow();
            if (selectedRow < 0) {
                JOptionPane.showMessageDialog(null, "Please Select a row from table first", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
//impletement method

            ShelterToFoodbankWorkRequest d = (ShelterToFoodbankWorkRequest) workRequestJTable.getValueAt(selectedRow, 0);

            ShelterOrderWorkAreaJPanel Shelterorder = new ShelterOrderWorkAreaJPanel(userProcessContainer, d);
            userProcessContainer.add(Shelterorder);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);

            populateRequestTable();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Please Select a row from table first", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_viewdetailJButtonActionPerformed

    private void btnApplyVolunteerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplyVolunteerActionPerformed
        try {
            
        int num = Integer.parseInt(txtHeadcount.getText());
        FoodBankToVolunteerWorkRequest request = new FoodBankToVolunteerWorkRequest();
        
        request.setNum(num);
        request.setMessage(txtmessage.getText());
        request.setSender(userAccount);
        request.setRequestDate(new Date());
        request.setStatus("Sent");

        userAccount.getWorkQueue().getFoodBankToVolunteerWorkRequestArrayList().add(request);
        business.getfirstVolunteerEnterprise().getWorkQueue().getFoodBankToVolunteerWorkRequestArrayList().add(request);
         
        
        
        JOptionPane.showMessageDialog(this, "Request sent");
        txtHeadcount.setText("");
        txtmessage.setText("");} catch (Exception e) {
            JOptionPane.showMessageDialog(this, e,"Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnApplyVolunteerActionPerformed

    private void refreshTestJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButton1ActionPerformed
        // TODO add your handling code here:
        populatevoluntertable();
    }//GEN-LAST:event_refreshTestJButton1ActionPerformed

    private void btnTaskcompletedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaskcompletedActionPerformed
       int selectedRow = tblProfile.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please Select a row from table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Volunteer profile = (Volunteer) tblProfile.getValueAt(selectedRow, 0);
        enterprise.getV().removeProfile(profile);
        populatevoluntertable();        // TODO add your handling code here:
    }//GEN-LAST:event_btnTaskcompletedActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApplyVolunteer;
    private javax.swing.JButton btnTaskcompleted;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton refreshTestJButton;
    private javax.swing.JButton refreshTestJButton1;
    private javax.swing.JButton requestTestJButton;
    private javax.swing.JTable tblProfile;
    private javax.swing.JTextField txtHeadcount;
    private javax.swing.JTextArea txtmessage;
    private javax.swing.JLabel valueLabel;
    private javax.swing.JButton viewdetailJButton;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables

    private void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

        model.setRowCount(0);

        for (ShelterToFoodbankWorkRequest request : organization.getWorkQueue().getSheltertofoodbanklist()) {
            Object[] row = new Object[4];
            row[0] = request;
            row[1] = request.getReceiver();
            row[2] = request.getStatus();
            row[3] = request.getMessage();

            model.addRow(row);
        }

    }

    private void populatevoluntertable() {
        DefaultTableModel model = (DefaultTableModel) tblProfile.getModel();

        model.setRowCount(0);

        for (Volunteer profile : enterprise.getV().getVolunteerDirectory()) {
                Object[] row = new Object[11];
                row[0] = profile;
                row[1] = profile.getId();
                row[2] = profile.getFirstname();
                row[3] = profile.getLastname();
                row[4] = profile.getGender();
                row[5] = profile.getAge();
                row[6] = profile.getBirth();
                row[7] = profile.getPhone();
                row[8] = profile.getAddress();
                row[9] = profile.getEmail();
                row[10] = profile.getComment();
                model.addRow(row);

            model.addRow(row);
        }      
    }
}
