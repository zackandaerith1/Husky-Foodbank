/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.AnalysisRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.FoodBankEnterprise;
import Business.Organization.Foodbank.AnalysisOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.PieDataset;

/**
 *
 * @author zhengfang
 */
public class AnalyWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private AnalysisOrganization organization;
    private Enterprise enterprise;
    private EcoSystem business;
    private UserAccount userAccount;

    /**
     * Creates new form AnalyWorkAreaJPanel
     */
    public AnalyWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, AnalysisOrganization organization, FoodBankEnterprise enterprise, EcoSystem business) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.business = business;
        this.userAccount = account;
        valueLabel.setText(enterprise.getName());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        ShowDataJButton = new javax.swing.JButton();
        FoobankDataJButton = new javax.swing.JButton();
        VolunteerData = new javax.swing.JButton();
        FundingDataJButton = new javax.swing.JButton();
        NetWorkData = new javax.swing.JButton();
        NetWorkData1 = new javax.swing.JButton();
        NetWorkData2 = new javax.swing.JButton();
        NetWorkData3 = new javax.swing.JButton();
        NetWorkData4 = new javax.swing.JButton();

        setBackground(new java.awt.Color(233, 230, 225));

        enterpriseLabel.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        enterpriseLabel.setForeground(new java.awt.Color(43, 71, 92));
        enterpriseLabel.setText("EnterPrise :");

        valueLabel.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        valueLabel.setForeground(new java.awt.Color(43, 71, 92));
        valueLabel.setText("<value>");

        ShowDataJButton.setBackground(new java.awt.Color(94, 138, 117));
        ShowDataJButton.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        ShowDataJButton.setForeground(new java.awt.Color(43, 71, 92));
        ShowDataJButton.setText("Shelter Employees");
        ShowDataJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowDataJButtonActionPerformed(evt);
            }
        });

        FoobankDataJButton.setBackground(new java.awt.Color(94, 138, 117));
        FoobankDataJButton.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        FoobankDataJButton.setForeground(new java.awt.Color(43, 71, 92));
        FoobankDataJButton.setText("FoodBank Employees");
        FoobankDataJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FoobankDataJButtonActionPerformed(evt);
            }
        });

        VolunteerData.setBackground(new java.awt.Color(94, 138, 117));
        VolunteerData.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        VolunteerData.setForeground(new java.awt.Color(43, 71, 92));
        VolunteerData.setText("Volunteer Employees");
        VolunteerData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VolunteerDataActionPerformed(evt);
            }
        });

        FundingDataJButton.setBackground(new java.awt.Color(94, 138, 117));
        FundingDataJButton.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        FundingDataJButton.setForeground(new java.awt.Color(43, 71, 92));
        FundingDataJButton.setText("Funding Employees");
        FundingDataJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FundingDataJButtonActionPerformed(evt);
            }
        });

        NetWorkData.setBackground(new java.awt.Color(94, 138, 117));
        NetWorkData.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        NetWorkData.setForeground(new java.awt.Color(43, 71, 92));
        NetWorkData.setText("Network Employees");
        NetWorkData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NetWorkDataActionPerformed(evt);
            }
        });

        NetWorkData1.setBackground(new java.awt.Color(94, 138, 117));
        NetWorkData1.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        NetWorkData1.setForeground(new java.awt.Color(43, 71, 92));
        NetWorkData1.setText("Network ");
        NetWorkData1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NetWorkData1ActionPerformed(evt);
            }
        });

        NetWorkData2.setBackground(new java.awt.Color(94, 138, 117));
        NetWorkData2.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        NetWorkData2.setForeground(new java.awt.Color(43, 71, 92));
        NetWorkData2.setText("Network Accounts");
        NetWorkData2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NetWorkData2ActionPerformed(evt);
            }
        });

        NetWorkData3.setBackground(new java.awt.Color(94, 138, 117));
        NetWorkData3.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        NetWorkData3.setForeground(new java.awt.Color(43, 71, 92));
        NetWorkData3.setText("Volunteer");
        NetWorkData3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NetWorkData3ActionPerformed(evt);
            }
        });

        NetWorkData4.setBackground(new java.awt.Color(94, 138, 117));
        NetWorkData4.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        NetWorkData4.setForeground(new java.awt.Color(43, 71, 92));
        NetWorkData4.setText("Network Workqueue");
        NetWorkData4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NetWorkData4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(valueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ShowDataJButton)
                            .addComponent(FundingDataJButton)
                            .addComponent(VolunteerData)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(NetWorkData)
                                    .addComponent(FoobankDataJButton))
                                .addGap(253, 253, 253)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(NetWorkData4)
                                    .addComponent(NetWorkData2)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(377, 377, 377)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NetWorkData3)
                            .addComponent(NetWorkData1))))
                .addContainerGap(273, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(valueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addComponent(NetWorkData1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NetWorkData)
                    .addComponent(NetWorkData2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FoobankDataJButton)
                    .addComponent(NetWorkData4))
                .addGap(23, 23, 23)
                .addComponent(ShowDataJButton)
                .addGap(18, 18, 18)
                .addComponent(FundingDataJButton)
                .addGap(18, 18, 18)
                .addComponent(VolunteerData)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(NetWorkData3)
                .addGap(235, 235, 235))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void FoobankDataJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FoobankDataJButtonActionPerformed
        // TODO add your handling code here:
        try {
            

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        
        for(Organization o: enterprise.getOrganizationDirectory().getOrganizationList()){
            
        dataset.setValue(o.getnumemployee(),"Employee number",o.getName());
            
        }
        
        
//        dataset.setValue(80,"Marks","Student1");
//        dataset.setValue(55,"Marks","Student2");
//        dataset.setValue(33,"Marks","Student3");
//        dataset.setValue(22,"Marks","Student4");
//        dataset.setValue(11,"Marks","Student5");
//        dataset.setValue(55,"Marks","Student6");
        
        //title,X-ax,Y-ax,dataset
        JFreeChart chart = ChartFactory.createBarChart("Organization Employees", "Organization name", "Number of Employees", dataset, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot p=chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.black);
        ChartFrame frame = new ChartFrame("Bar Chart", chart);
        frame.setVisible(true);
        frame.setSize(600,400);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }        
        
//        FoodBankAnalysisJPanel dataanalysis = new FoodBankAnalysisJPanel(userProcessContainer, userAccount, enterprise, business);
//        userProcessContainer.add(dataanalysis);
//        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        layout.next(userProcessContainer);

    }//GEN-LAST:event_FoobankDataJButtonActionPerformed

    private void ShowDataJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowDataJButtonActionPerformed
        // TODO add your handling code here:
        try {
            

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        
        for(Organization o:business.getfirstShelterEnterprise().getOrganizationDirectory().getOrganizationList()){
            
        dataset.setValue(o.getnumemployee(),"Employee number",o.getName());
            
        }
        //title,X-ax,Y-ax,dataset
        JFreeChart chart = ChartFactory.createBarChart("Organization Employees", "Organization name", "Number of Employees", dataset, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot p=chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.black);
        ChartFrame frame = new ChartFrame("Bar Chart", chart);
        frame.setVisible(true);
        frame.setSize(600,400);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
//        ShelterAnalysisJPanel dataanalysis = new ShelterAnalysisJPanel(userProcessContainer, userAccount, business);
//        userProcessContainer.add(dataanalysis);
//        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        layout.next(userProcessContainer);
    }//GEN-LAST:event_ShowDataJButtonActionPerformed

    private void VolunteerDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VolunteerDataActionPerformed
        // TODO add your handling code here:
        try {
            

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        
        for(Organization o:business.getfirstVolunteerEnterprise().getOrganizationDirectory().getOrganizationList()){
            
        dataset.setValue(o.getnumemployee(),"Employee number",o.getName());
            
        }
        //title,X-ax,Y-ax,dataset
        JFreeChart chart = ChartFactory.createBarChart("Organization Employees", "Organization name", "Number of Employees", dataset, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot p=chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.black);
        ChartFrame frame = new ChartFrame("Bar Chart", chart);
        frame.setVisible(true);
        frame.setSize(600,400);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
//        VolunteerAnalysisJPanel dataanalysis = new VolunteerAnalysisJPanel(userProcessContainer, userAccount, business);
//        userProcessContainer.add(dataanalysis);
//        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        layout.next(userProcessContainer);
    }//GEN-LAST:event_VolunteerDataActionPerformed

    private void FundingDataJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FundingDataJButtonActionPerformed
        // TODO add your handling code here:
        try {

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        
        for(Organization o:business.getfirstFundingEnterprise().getOrganizationDirectory().getOrganizationList()){
            
        dataset.setValue(o.getnumemployee(),"Employee number",o.getName());
            
        }
        //title,X-ax,Y-ax,dataset
        JFreeChart chart = ChartFactory.createBarChart("Organization Employees", "Organization name", "Number of Employees", dataset, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot p=chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.black);
        ChartFrame frame = new ChartFrame("Bar Chart", chart);
        frame.setVisible(true);
        frame.setSize(600,400);
        } catch (Exception e) {
    JOptionPane.showMessageDialog(this, e);
        }
//        FundingAnalysisJPanel dataanalysis = new FundingAnalysisJPanel(userProcessContainer, userAccount, business);
//        userProcessContainer.add(dataanalysis);
//        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        layout.next(userProcessContainer);
    }//GEN-LAST:event_FundingDataJButtonActionPerformed

    private void NetWorkDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NetWorkDataActionPerformed
        try {
            

       DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        
        dataset.setValue(business.getnumemployee(), "Employee", "Entire business");
        
        for(Enterprise o: business.getNetworkList().get(0).getEnterpriseDirectory().getEnterpriseList()){
            
        dataset.setValue(o.getnumemployees(),"Employee number",o.getEnterpriseType());
            
        }
//        PieDataset 
        //title,X-ax,Y-ax,dataset
//        JFreeChar chart = ChartFactory.createPieChart(TOOL_TIP_TEXT_KEY, JFreeChar, true, true, Locale.ITALY)

        JFreeChart chart = ChartFactory.createBarChart("Enterprise Employees", "Enterprise name", "Number of Employees", dataset, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot p=chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.black);
        ChartFrame frame = new ChartFrame("Bar Chart", chart);
        frame.setVisible(true);
        frame.setSize(600,400);
        } catch (Exception e) {
    JOptionPane.showMessageDialog(this, e);
        }      
        
//        NetworkAnalysisJPanel dataanalysis = new NetworkAnalysisJPanel(userProcessContainer, userAccount, business);
//        userProcessContainer.add(dataanalysis);
//        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        layout.next(userProcessContainer);
    }//GEN-LAST:event_NetWorkDataActionPerformed

    private void NetWorkData1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NetWorkData1ActionPerformed
        // TODO add your handling code here:
        try {
            

       DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        
        for(Enterprise o: business.getNetworkList().get(0).getEnterpriseDirectory().getEnterpriseList()){
            
        dataset.setValue(o.getnumOrg(),"Organization number",o.getEnterpriseType());
            
        }

        JFreeChart chart = ChartFactory.createBarChart("Enterprise Oranizations", "Enterprise name", "Number of Organization", dataset, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot p=chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.black);
        ChartFrame frame = new ChartFrame("Bar Chart", chart);
        frame.setVisible(true);
        frame.setSize(600,400);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_NetWorkData1ActionPerformed

    private void NetWorkData2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NetWorkData2ActionPerformed
        // TODO add your handling code here:
try {

       DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        
        dataset.setValue(business.getnumaccount(), "Account number", "Entire business");
        for(Enterprise o: business.getNetworkList().get(0).getEnterpriseDirectory().getEnterpriseList()){
            
        dataset.setValue(o.getnumaccounts(),"Account number",o.getEnterpriseType());
            
        }
        
        JFreeChart chart = ChartFactory.createBarChart("Accounts", "Enterprise", "Number of Accounts", dataset, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot p=chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.black);
        ChartFrame frame = new ChartFrame("Bar Chart", chart);
        frame.setVisible(true);
        frame.setSize(600,400);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_NetWorkData2ActionPerformed

    private void NetWorkData3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NetWorkData3ActionPerformed
        // TODO add your handling code here:
     
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        try {
            

        dataset.setValue(business.getfirstFoodBankEnterprise().getNumberofVolunteer(), "Volunteer number", business.getfirstFoodBankEnterprise().getEnterpriseType());
        dataset.setValue(business.getfirstFundingEnterprise().getNumberofVolunteer(),"Volunteer number",business.getfirstFundingEnterprise().getEnterpriseType());
            
        dataset.setValue(business.getfirstShelterEnterprise().getNumberofVolunteer(),"Volunteer number",business.getfirstShelterEnterprise().getEnterpriseType());
            

        
        JFreeChart chart = ChartFactory.createBarChart("Volunteers", "Enterprise", "Number of Volunteers", dataset, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot p=chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.black);
        ChartFrame frame = new ChartFrame("Bar Chart", chart);
        frame.setVisible(true);
        frame.setSize(600,400);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_NetWorkData3ActionPerformed

    private void NetWorkData4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NetWorkData4ActionPerformed
        // TODO add your handling code here:
 try {

       DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        
        dataset.setValue(business.getWorkQueue().getTotalwq(), "workrequest number", "Entire business");
        for(Enterprise o: business.getNetworkList().get(0).getEnterpriseDirectory().getEnterpriseList()){
            
        dataset.setValue(o.getWorkQueue().getTotalwq(),"Workrequest number",o.getEnterpriseType());
            
        }
        
        JFreeChart chart = ChartFactory.createBarChart("Workrequests", "Enterprise", "Number of Workrequest", dataset, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot p=chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.black);
        ChartFrame frame = new ChartFrame("Bar Chart", chart);
        frame.setVisible(true);
        frame.setSize(600,400);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }       
    }//GEN-LAST:event_NetWorkData4ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton FoobankDataJButton;
    private javax.swing.JButton FundingDataJButton;
    private javax.swing.JButton NetWorkData;
    private javax.swing.JButton NetWorkData1;
    private javax.swing.JButton NetWorkData2;
    private javax.swing.JButton NetWorkData3;
    private javax.swing.JButton NetWorkData4;
    private javax.swing.JButton ShowDataJButton;
    private javax.swing.JButton VolunteerData;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables

    private void populateRequestTable() {

    }
}
